@function strip-unit($number) {
    @if type-of($number) == "number" and not unitless($number) {
      @return $number / ($number * 0 + 1);
    }
    @return $number;
}

@function px2rem($px, $root-px: 16){
    $value: strip-unit($px);
    $root-value: strip-unit($root-px);
    @return $value / $root-value + rem;
}

.hero {
    width: 100%;
    max-width: 1200px;
    height: 70vh;
    background: url(../img/herogreyscale.png), 
    no-repeat linear-gradient(160deg, rgba(119, 33, 111, 0.7) 0%, rgba(233, 84, 32, 0.7) 100%), 
    no-repeat linear-gradient(150deg, rgba(119, 33, 111, 1) 15%, rgba(233, 84, 32, 1) 70%, rgba(233, 84, 32, 1) 100%);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: 50% 50%;
    display: flex;
    flex-direction: column;
    align-items: start;
    margin: 0 auto;
    justify-content: center;

        &__title {
            color: white;
            margin-left: 10%;
            max-width: 40%;
        }
        &__subtitle {
            color: rgba(255,255,255,.7);
            margin-left: 11%;
            max-width: 40%;
        }
        &__button {
            margin-left: 11%;
            background: tomato;
            display: inline;
            text-decoration: none;
            // Make padding and border-radius scale with the font-size
            padding: px2rem(8px) px2rem(16px);
            border-radius: px2rem(3px);
            // padding: 8px 16px;
            // border-radius: 3px;
        }
}
